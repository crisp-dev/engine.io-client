{"version":3,"file":"engine.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.js","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/transport.js","../build/esm/contrib/yeast.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/contrib/parseqs.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../node_modules/engine.io-parser/build/esm/index.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export default (() => {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","_ref","supportsBinary","callback","obj","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","length","len","p","arraybuffer","bytes","decode","mapBinary","Emitter_1","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThis","window","Function","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","byteLength","str","c","l","utf8Length","Math","ceil","size","TransportError","_Error","reason","description","context","_this","_classCallCheck","_callSuper","_inherits","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_this2","writable","query","readyState","socket","value","_superPropGet","doOpen","doClose","onClose","packets","write","packet","encodedPacket","charAt","substring","decodePacket","onPacket","details","prev","alphabet","map","seed","encode","num","encoded","floor","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","_Transport","forceBase64","get","check","uri","protocols","_len","attr","_key","reduce","acc","k","hasOwnProperty","pick","extraHeaders","headers","ws","err","addEventListeners","onopen","autoUnref","_socket","unref","onOpen","onclose","closeEvent","onmessage","ev","onData","onerror","e","onError","_this3","_loop","lastPacket","send","close","now","schema","secure","port","Number","timestampRequests","timestampParam","Date","b64","encodedQuery","encodeURIComponent","hostname","indexOf","path","name","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","undefined","_typeof","protocol","location","writeBuffer","prevBufferLen","_extends","agent","withCredentials","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","open","o","clone","EIO","sid","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","_this4","failed","onTransportOpen","msg","upgrading","pause","cleanup","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","_this5","getWritablePackets","payloadSize","options","compress","_this6","cleanupAndClose","waitForUpgrade","filteredUpgrades","j"],"mappings":"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"}