{"version":3,"file":"engine.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/@socket.io/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.js","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/transport.js","../build/esm/contrib/parseqs.js","../build/esm/contrib/yeast.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../node_modules/engine.io-parser/build/esm/index.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"@socket.io/base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","obj","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","Emitter","mixin","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","self","window","Function","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","reason","description","context","Error","Transport","writable","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","encodedPacket","charAt","substring","decodePacket","onPacket","details","qs","qry","pairs","l","pair","decodeURIComponent","prev","alphabet","map","seed","encode","num","encoded","Math","floor","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","check","uri","protocols","attr","reduce","acc","k","hasOwnProperty","pick","extraHeaders","headers","ws","err","addEventListeners","onopen","_this2","autoUnref","_socket","unref","onOpen","onclose","closeEvent","onmessage","ev","onData","onerror","e","onError","lastPacket","_this3","send","close","now","schema","secure","port","Number","timestampRequests","timestampParam","Date","b64","encodedQuery","str","encodeURIComponent","hostname","indexOf","path","name","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","protocol","location","_this","writeBuffer","prevBufferLen","_extends","agent","withCredentials","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","open","o","clone","EIO","sid","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","_this4","upgrading","pause","cleanup","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","_this5","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","undefined","compress","_this6","cleanupAndClose","waitForUpgrade","filteredUpgrades","j"],"mappings":";;;;;29FAAA,IAAMA,EAAeC,OAAOC,OAAO,MACnCF,EAAY,KAAW,IACvBA,EAAY,MAAY,IACxBA,EAAY,KAAW,IACvBA,EAAY,KAAW,IACvBA,EAAY,QAAc,IAC1BA,EAAY,QAAc,IAC1BA,EAAY,KAAW,IACvB,IAAMG,EAAuBF,OAAOC,OAAO,MAC3CD,OAAOG,KAAKJ,GAAcK,SAAQ,SAAAC,GAC9BH,EAAqBH,EAAaM,IAAQA,KCN9C,IDQA,IAAMC,EAAe,CAAEC,KAAM,QAASC,KAAM,gBEXtCC,EAAiC,mBAATC,MACT,oBAATA,MACqC,6BAAzCV,OAAOW,UAAUC,SAASC,KAAKH,MACjCI,EAA+C,mBAAhBC,YAO/BC,EAAe,WAAiBC,EAAgBC,OALvCC,EAKSZ,IAAAA,KAAMC,IAAAA,YACtBC,GAAkBD,aAAgBE,KAC9BO,EACOC,EAASV,GAGTY,EAAmBZ,EAAMU,GAG/BJ,IACJN,aAAgBO,cAfVI,EAegCX,EAdN,mBAAvBO,YAAYM,OACpBN,YAAYM,OAAOF,GACnBA,GAAOA,EAAIG,kBAAkBP,cAa3BE,EACOC,EAASV,GAGTY,EAAmB,IAAIV,KAAK,CAACF,IAAQU,GAI7CA,EAASnB,EAAaQ,IAASC,GAAQ,MAE5CY,EAAqB,SAACZ,EAAMU,OACxBK,EAAa,IAAIC,kBACvBD,EAAWE,OAAS,eACVC,EAAUH,EAAWI,OAAOC,MAAM,KAAK,GAC7CV,EAAS,IAAMQ,IAEZH,EAAWM,cAAcrB,IDtC9BsB,EAAQ,mEAGRC,EAA+B,oBAAfC,WAA6B,GAAK,IAAIA,WAAW,KAC9DC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9BF,EAAOD,EAAMK,WAAWF,IAAMA,MEH5BnB,EAA+C,mBAAhBC,YA4B/BqB,EAAqB,SAAC5B,EAAM6B,MAC1BvB,EAAuB,KACjBwB,EFFQ,SAACC,OAGfN,EAEAO,EACAC,EACAC,EACAC,EAPAC,EAA+B,IAAhBL,EAAOL,OACtBW,EAAMN,EAAOL,OAEbY,EAAI,EAM0B,MAA9BP,EAAOA,EAAOL,OAAS,KACvBU,IACkC,MAA9BL,EAAOA,EAAOL,OAAS,IACvBU,SAIFG,EAAc,IAAIhC,YAAY6B,GAChCI,EAAQ,IAAIhB,WAAWe,OAEtBd,EAAI,EAAGA,EAAIY,EAAKZ,GAAK,EACtBO,EAAWT,EAAOQ,EAAOJ,WAAWF,IACpCQ,EAAWV,EAAOQ,EAAOJ,WAAWF,EAAI,IACxCS,EAAWX,EAAOQ,EAAOJ,WAAWF,EAAI,IACxCU,EAAWZ,EAAOQ,EAAOJ,WAAWF,EAAI,IAExCe,EAAMF,KAAQN,GAAY,EAAMC,GAAY,EAC5CO,EAAMF,MAAoB,GAAXL,IAAkB,EAAMC,GAAY,EACnDM,EAAMF,MAAoB,EAAXJ,IAAiB,EAAiB,GAAXC,SAGnCI,EE7BaE,CAAOzC,UAChB0C,EAAUZ,EAASD,SAGnB,CAAEE,QAAQ,EAAM/B,KAAAA,IAGzB0C,EAAY,SAAC1C,EAAM6B,SAEZ,SADDA,GAEO7B,aAAgBO,YAAc,IAAIL,KAAK,CAACF,IAGxCA,KCxCD2C,EAQlB,SAASA,EAAQhC,MACXA,EAAK,OAWX,SAAeA,OACR,IAAId,KAAO8C,EAAQxC,UACtBQ,EAAId,GAAO8C,EAAQxC,UAAUN,UAExBc,EAfSiC,CAAMjC,GA2BxBgC,EAAQxC,UAAU0C,GAClBF,EAAQxC,UAAU2C,iBAAmB,SAASC,EAAOC,eAC9CC,WAAaC,KAAKD,YAAc,IACpCC,KAAKD,WAAW,IAAMF,GAASG,KAAKD,WAAW,IAAMF,IAAU,IAC7DI,KAAKH,GACDE,MAaTP,EAAQxC,UAAUiD,KAAO,SAASL,EAAOC,YAC9BH,SACFQ,IAAIN,EAAOF,GAChBG,EAAGM,MAAMJ,KAAMK,kBAGjBV,EAAGG,GAAKA,OACHH,GAAGE,EAAOF,GACRK,MAaTP,EAAQxC,UAAUkD,IAClBV,EAAQxC,UAAUqD,eAClBb,EAAQxC,UAAUsD,mBAClBd,EAAQxC,UAAUuD,oBAAsB,SAASX,EAAOC,WACjDC,WAAaC,KAAKD,YAAc,GAGjC,GAAKM,UAAU7B,mBACZuB,WAAa,GACXC,SAcLS,EAVAC,EAAYV,KAAKD,WAAW,IAAMF,OACjCa,EAAW,OAAOV,QAGnB,GAAKK,UAAU7B,qBACVwB,KAAKD,WAAW,IAAMF,GACtBG,SAKJ,IAAIzB,EAAI,EAAGA,EAAImC,EAAUlC,OAAQD,QACpCkC,EAAKC,EAAUnC,MACJuB,GAAMW,EAAGX,KAAOA,EAAI,CAC7BY,EAAUC,OAAOpC,EAAG,gBAOC,IAArBmC,EAAUlC,eACLwB,KAAKD,WAAW,IAAMF,GAGxBG,MAWTP,EAAQxC,UAAU2D,KAAO,SAASf,QAC3BE,WAAaC,KAAKD,YAAc,WAEjCc,EAAO,IAAIC,MAAMT,UAAU7B,OAAS,GACpCkC,EAAYV,KAAKD,WAAW,IAAMF,GAE7BtB,EAAI,EAAGA,EAAI8B,UAAU7B,OAAQD,IACpCsC,EAAKtC,EAAI,GAAK8B,UAAU9B,MAGtBmC,EAEG,CAAInC,EAAI,MAAR,IAAWY,GADhBuB,EAAYA,EAAUK,MAAM,IACIvC,OAAQD,EAAIY,IAAOZ,EACjDmC,EAAUnC,GAAG6B,MAAMJ,KAAMa,UAItBb,MAITP,EAAQxC,UAAU+D,aAAevB,EAAQxC,UAAU2D,KAUnDnB,EAAQxC,UAAUgE,UAAY,SAASpB,eAChCE,WAAaC,KAAKD,YAAc,GAC9BC,KAAKD,WAAW,IAAMF,IAAU,IAWzCJ,EAAQxC,UAAUiE,aAAe,SAASrB,WAC9BG,KAAKiB,UAAUpB,GAAOrB,cC7KV,oBAAT2C,KACAA,KAEgB,oBAAXC,OACLA,OAGAC,SAAS,cAATA,GCEf,IAAMC,EAAqBC,WACrBC,EAAuBC,aACtB,SAASC,EAAsBjE,EAAKkE,GACnCA,EAAKC,iBACLnE,EAAIoE,aAAeP,EAAmBQ,KAAKC,GAC3CtE,EAAIuE,eAAiBR,EAAqBM,KAAKC,KAG/CtE,EAAIoE,aAAeN,WAAWO,KAAKC,GACnCtE,EAAIuE,eAAiBP,aAAaK,KAAKC,QChBzCE,2CACUC,EAAQC,EAAaC,yCACvBF,IACDC,YAAcA,IACdC,QAAUA,IACVvF,KAAO,+BALSwF,QAQhBC,2CAOGX,2CAEHY,UAAW,EAChBb,OAA4BC,KACvBA,KAAOA,IACPa,MAAQb,EAAKa,QACbC,WAAa,KACbC,OAASf,EAAKe,mDAWfR,EAAQC,EAAaC,0DACN,QAAS,IAAIH,EAAeC,EAAQC,EAAaC,IAC7DpC,0CAQH,WAAaA,KAAKyC,YAAc,KAAOzC,KAAKyC,kBACvCA,WAAa,eACbE,UAEF3C,2CAQH,YAAcA,KAAKyC,YAAc,SAAWzC,KAAKyC,kBAC5CG,eACAC,WAEF7C,kCAQN8C,GACG,SAAW9C,KAAKyC,iBACXM,MAAMD,yCAYVL,WAAa,YACbF,UAAW,kDACG,uCAQhBzF,OACGkG,EJ5FO,SAACC,EAAetE,MACJ,iBAAlBsE,QACA,CACHpG,KAAM,UACNC,KAAM0C,EAAUyD,EAAetE,QAGjC9B,EAAOoG,EAAcC,OAAO,SACrB,MAATrG,EACO,CACHA,KAAM,UACNC,KAAM4B,EAAmBuE,EAAcE,UAAU,GAAIxE,IAG1CnC,EAAqBK,GAIjCoG,EAAczE,OAAS,EACxB,CACE3B,KAAML,EAAqBK,GAC3BC,KAAMmG,EAAcE,UAAU,IAEhC,CACEtG,KAAML,EAAqBK,IARxBD,EI4EQwG,CAAatG,EAAMkD,KAAK0C,OAAO/D,iBACzC0E,SAASL,oCAOTA,mDACc,SAAUA,mCAOzBM,QACCb,WAAa,yDACC,QAASa,UAtGL7D,GCcxB,SAASF,EAAOgE,WACfC,EAAM,GACNC,EAAQF,EAAGrF,MAAM,KACZK,EAAI,EAAGmF,EAAID,EAAMjF,OAAQD,EAAImF,EAAGnF,IAAK,KACtCoF,EAAOF,EAAMlF,GAAGL,MAAM,KAC1BsF,EAAII,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,WAExDH,EC9BX,IACqBK,EADfC,EAAW,mEAAmE5F,MAAM,IAAkB6F,EAAM,GAC9GC,EAAO,EAAGzF,EAAI,EAQX,SAAS0F,EAAOC,OACfC,EAAU,MAEVA,EAAUL,EAASI,EAZ6E,IAY7DC,EACnCD,EAAME,KAAKC,MAAMH,EAb+E,UAc3FA,EAAM,UACRC,EA+BX,KAAO5F,EA9CiG,GA8CrFA,IACfwF,EAAID,EAASvF,IAAMA,EChDhB,IAAM+F,EACqC,mBAAZC,SAAqD,mBAApBA,QAAQC,QAEhE,SAAA/D,UAAM8D,QAAQC,UAAUC,KAAKhE,IAG7B,SAACA,EAAIoB,UAAiBA,EAAapB,EAAI,IAGzCiE,EAAY3C,EAAW2C,WAAa3C,EAAW4C,aCHtDC,EAAqC,oBAAdC,WACI,iBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cACTC,2CAOGrD,yCACFA,IACDpE,gBAAkBoE,EAAKsD,4DAgBvBjF,KAAKkF,aAIJC,EAAMnF,KAAKmF,MACXC,EAAYpF,KAAK2B,KAAKyD,UAEtBzD,EAAOiD,EACP,GL1CP,SAAcnH,8BAAQ4H,mCAAAA,2BAClBA,EAAKC,QAAO,SAACC,EAAKC,UACjB/H,EAAIgI,eAAeD,KACnBD,EAAIC,GAAK/H,EAAI+H,IAEVD,IACR,IKqCOG,CAAK1F,KAAK2B,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChM3B,KAAK2B,KAAKgE,eACVhE,EAAKiE,QAAU5F,KAAK2B,KAAKgE,uBAGpBE,GACyBjB,EAIpB,IAAIF,EAAUS,EAAKC,EAAWzD,GAH9ByD,EACI,IAAIV,EAAUS,EAAKC,GACnB,IAAIV,EAAUS,GAGhC,MAAOW,UACI9F,KAAKgB,aAAa,QAAS8E,QAEjCD,GAAGlH,WAAaqB,KAAK0C,OAAO/D,YD/CR,mBCgDpBoH,iFAQAF,GAAGG,OAAS,WACTC,EAAKtE,KAAKuE,WACVD,EAAKJ,GAAGM,QAAQC,QAEpBH,EAAKI,eAEJR,GAAGS,QAAU,SAAAC,UAAcN,EAAKpD,QAAQ,CACzCV,YAAa,8BACbC,QAASmE,UAERV,GAAGW,UAAY,SAAAC,UAAMR,EAAKS,OAAOD,EAAG3J,YACpC+I,GAAGc,QAAU,SAAAC,UAAKX,EAAKY,QAAQ,kBAAmBD,kCAQrD9D,mBACGP,UAAW,qBAGPhE,OACCyE,EAASF,EAAQvE,GACjBuI,EAAavI,IAAMuE,EAAQtE,OAAS,EAC1ClB,EAAa0F,EAAQ+D,EAAKxJ,gBAAgB,SAAAT,OAsB9BiK,EAAKlB,GAAGmB,KAAKlK,GAMrB,MAAO8J,IAEHE,GAGAxC,GAAS,WACLyC,EAAKxE,UAAW,EAChBwE,EAAK/F,aAAa,WACnB+F,EAAKlF,kBAvCXtD,EAAI,EAAGA,EAAIuE,EAAQtE,OAAQD,MAA3BA,0CAkDc,IAAZyB,KAAK6F,UACPA,GAAGoB,aACHpB,GAAK,wCFvGZqB,EEgHE1E,EAAQxC,KAAKwC,OAAS,GACpB2E,EAASnH,KAAK2B,KAAKyF,OAAS,MAAQ,KACtCC,EAAO,GAEPrH,KAAK2B,KAAK0F,OACR,QAAUF,GAAqC,MAA3BG,OAAOtH,KAAK2B,KAAK0F,OAClC,OAASF,GAAqC,KAA3BG,OAAOtH,KAAK2B,KAAK0F,SACzCA,EAAO,IAAMrH,KAAK2B,KAAK0F,MAGvBrH,KAAK2B,KAAK4F,oBACV/E,EAAMxC,KAAK2B,KAAK6F,iBF3HlBN,EAAMjD,GAAQ,IAAIwD,SACZ5D,GACDG,EAAO,EAAGH,EAAOqD,GACrBA,EAAM,IAAMjD,EAAOD,ME2HjBhE,KAAKzC,iBACNiF,EAAMkF,IAAM,OAEVC,EHjKP,SAAgBlK,OACfmK,EAAM,OACL,IAAIrJ,KAAKd,EACNA,EAAIgI,eAAelH,KACfqJ,EAAIpJ,SACJoJ,GAAO,KACXA,GAAOC,mBAAmBtJ,GAAK,IAAMsJ,mBAAmBpK,EAAIc,YAG7DqJ,EGwJkB3D,CAAOzB,UAEpB2E,EACJ,QAF8C,IAArCnH,KAAK2B,KAAKmG,SAASC,QAAQ,KAG5B,IAAM/H,KAAK2B,KAAKmG,SAAW,IAAM9H,KAAK2B,KAAKmG,UACnDT,EACArH,KAAK2B,KAAKqG,MACTL,EAAanJ,OAAS,IAAMmJ,EAAe,6CAStCjD,GACJ,iBAAkBA,GAAa1E,KAAKiI,OAASjD,EAAG/H,UAAUgL,yCA/JzD,mBAjBS3F,GCTX4F,EAAa,CACtBC,UAAWnD,GCKToD,EAAK,0OACLC,EAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAElI,SAASC,EAAMV,OACZW,EAAMX,EAAKY,EAAIZ,EAAIG,QAAQ,KAAMnB,EAAIgB,EAAIG,QAAQ,MAC7C,GAANS,IAAiB,GAAN5B,IACXgB,EAAMA,EAAIzE,UAAU,EAAGqF,GAAKZ,EAAIzE,UAAUqF,EAAG5B,GAAG6B,QAAQ,KAAM,KAAOb,EAAIzE,UAAUyD,EAAGgB,EAAIpJ,iBA0B3EgE,EACb1F,EAzBF4L,EAAIN,EAAGO,KAAKf,GAAO,IAAKzC,EAAM,GAAI5G,EAAI,GACnCA,KACH4G,EAAIkD,EAAM9J,IAAMmK,EAAEnK,IAAM,UAElB,GAANiK,IAAiB,GAAN5B,IACXzB,EAAIyD,OAASL,EACbpD,EAAI0D,KAAO1D,EAAI0D,KAAK1F,UAAU,EAAGgC,EAAI0D,KAAKrK,OAAS,GAAGiK,QAAQ,KAAM,KACpEtD,EAAI2D,UAAY3D,EAAI2D,UAAUL,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9EtD,EAAI4D,SAAU,GAElB5D,EAAI6D,UAIR,SAAmBvL,EAAKuK,OACdiB,EAAO,WAAYC,EAAQlB,EAAKS,QAAQQ,EAAM,KAAK/K,MAAM,KACtC,KAArB8J,EAAKmB,OAAO,EAAG,IAA6B,IAAhBnB,EAAKxJ,QACjC0K,EAAMvI,OAAO,EAAG,GAEmB,KAAnCqH,EAAKmB,OAAOnB,EAAKxJ,OAAS,EAAG,IAC7B0K,EAAMvI,OAAOuI,EAAM1K,OAAS,EAAG,UAE5B0K,EAZSF,CAAU7D,EAAKA,EAAG,MAClCA,EAAIiE,UAae5G,EAbU2C,EAAG,MAc1BrI,EAAO,GACb0F,EAAMiG,QAAQ,6BAA6B,SAAUY,EAAIC,EAAIC,GACrDD,IACAxM,EAAKwM,GAAMC,MAGZzM,GAnBAqI,MCtBEqE,2CAQGrE,SAAKxD,yDAAO,mCAEhBwD,GAAO,aAAoBA,KAC3BxD,EAAOwD,EACPA,EAAM,MAENA,GACAA,EAAMmD,EAAMnD,GACZxD,EAAKmG,SAAW3C,EAAI0D,KACpBlH,EAAKyF,OAA0B,UAAjBjC,EAAIsE,UAAyC,QAAjBtE,EAAIsE,SAC9C9H,EAAK0F,KAAOlC,EAAIkC,KACZlC,EAAI3C,QACJb,EAAKa,MAAQ2C,EAAI3C,QAEhBb,EAAKkH,OACVlH,EAAKmG,SAAWQ,EAAM3G,EAAKkH,MAAMA,MAErCnH,OAA4BC,KACvByF,OACD,MAAQzF,EAAKyF,OACPzF,EAAKyF,OACe,oBAAbsC,UAA4B,WAAaA,SAASD,SAC/D9H,EAAKmG,WAAanG,EAAK0F,OAEvB1F,EAAK0F,KAAOsC,EAAKvC,OAAS,MAAQ,QAEjCU,SACDnG,EAAKmG,WACoB,oBAAb4B,SAA2BA,SAAS5B,SAAW,eAC1DT,KACD1F,EAAK0F,OACoB,oBAAbqC,UAA4BA,SAASrC,KACvCqC,SAASrC,KACTsC,EAAKvC,OACD,MACA,QACbc,WAAavG,EAAKuG,YAAc,CAAC,eACjCzF,WAAa,KACbmH,YAAc,KACdC,cAAgB,IAChBlI,KAAOmI,EAAc,CACtB9B,KAAM,aACN+B,OAAO,EACPC,iBAAiB,EACjBC,SAAS,EACTzC,eAAgB,IAChB0C,iBAAiB,EACjBC,oBAAoB,EACpBC,kBAAmB,CACfC,UAAW,MAEfC,iBAAkB,GAClBC,qBAAqB,GACtB5I,KACEA,KAAKqG,KAAO2B,EAAKhI,KAAKqG,KAAKS,QAAQ,MAAO,IAAM,IACtB,iBAApBkB,EAAKhI,KAAKa,UACZb,KAAKa,MAAQjD,EAAOoK,EAAKhI,KAAKa,UAGlCgI,GAAK,OACLC,SAAW,OACXC,aAAe,OACfC,YAAc,OAEdC,iBAAmB,KACQ,mBAArBhL,mBACH+J,EAAKhI,KAAK4I,qBAIV3K,iBAAiB,gBAAgB,WACzB+J,EAAKkB,cAEAA,UAAUtK,uBACVsK,UAAU5D,YAEpB,GAEe,cAAlB0C,EAAK7B,aACAgD,qBAAuB,aACnBjI,QAAQ,kBAAmB,CAC5BV,YAAa,6BAGrBvC,iBAAiB,UAAW+J,EAAKmB,sBAAsB,OAG1DC,2DASO9C,OACNzF,EAodd,SAAe/E,OACLuN,EAAI,OACL,IAAIzM,KAAKd,EACNA,EAAIgI,eAAelH,KACnByM,EAAEzM,GAAKd,EAAIc,WAGZyM,EA3dWC,CAAMjL,KAAK2B,KAAKa,OAE9BA,EAAM0I,ICnFU,EDqFhB1I,EAAMqI,UAAY5C,EAEdjI,KAAKwK,KACLhI,EAAM2I,IAAMnL,KAAKwK,QACf7I,EAAOmI,EAAc,GAAI9J,KAAK2B,KAAK2I,iBAAiBrC,GAAOjI,KAAK2B,KAAM,CACxEa,MAAAA,EACAE,OAAQ1C,KACR8H,SAAU9H,KAAK8H,SACfV,OAAQpH,KAAKoH,OACbC,KAAMrH,KAAKqH,cAER,IAAIa,EAAWD,GAAMtG,sCAQxBkJ,YACA7K,KAAK2B,KAAKuI,iBACVV,EAAO4B,wBACmC,IAA1CpL,KAAKkI,WAAWH,QAAQ,aACxB8C,EAAY,gBAEX,CAAA,GAAI,IAAM7K,KAAKkI,WAAW1J,wBAEtBqD,cAAa,WACdoE,EAAKjF,aAAa,QAAS,6BAC5B,GAIH6J,EAAY7K,KAAKkI,WAAW,QAE3BzF,WAAa,cAGdoI,EAAY7K,KAAKqL,gBAAgBR,GAErC,MAAOjE,eACEsB,WAAWoD,kBACXP,OAGTF,EAAUE,YACLQ,aAAaV,wCAOTA,cACL7K,KAAK6K,gBACAA,UAAUtK,0BAGdsK,UAAYA,EAEjBA,EACKlL,GAAG,QAASK,KAAKwL,QAAQ1J,KAAK9B,OAC9BL,GAAG,SAAUK,KAAKqD,SAASvB,KAAK9B,OAChCL,GAAG,QAASK,KAAK6G,QAAQ/E,KAAK9B,OAC9BL,GAAG,SAAS,SAAAuC,UAAU6E,EAAKlE,QAAQ,kBAAmBX,oCAQzD+F,cACE4C,EAAY7K,KAAKqL,gBAAgBpD,GACjCwD,GAAS,EACbjC,EAAO4B,uBAAwB,MACzBM,EAAkB,WAChBD,IAEJZ,EAAU7D,KAAK,CAAC,CAAEnK,KAAM,OAAQC,KAAM,WACtC+N,EAAU3K,KAAK,UAAU,SAAAyL,OACjBF,KAEA,SAAWE,EAAI9O,MAAQ,UAAY8O,EAAI7O,KAAM,IAC7C8O,EAAKC,WAAY,EACjBD,EAAK5K,aAAa,YAAa6J,IAC1BA,EACD,OACJrB,EAAO4B,sBAAwB,cAAgBP,EAAU5C,KACzD2D,EAAKf,UAAUiB,OAAM,WACbL,GAEA,WAAaG,EAAKnJ,aAEtBsJ,IACAH,EAAKL,aAAaV,GAClBA,EAAU7D,KAAK,CAAC,CAAEnK,KAAM,aACxB+O,EAAK5K,aAAa,UAAW6J,GAC7BA,EAAY,KACZe,EAAKC,WAAY,EACjBD,EAAKI,gBAGR,KACKlG,EAAM,IAAIzD,MAAM,eAEtByD,EAAI+E,UAAYA,EAAU5C,KAC1B2D,EAAK5K,aAAa,eAAgB8E,kBAIrCmG,IACDR,IAGJA,GAAS,EACTM,IACAlB,EAAU5D,QACV4D,EAAY,UAGVlE,EAAU,SAAAb,OACNoG,EAAQ,IAAI7J,MAAM,gBAAkByD,GAE1CoG,EAAMrB,UAAYA,EAAU5C,KAC5BgE,IACAL,EAAK5K,aAAa,eAAgBkL,aAE7BC,IACLxF,EAAQ,6BAGHL,IACLK,EAAQ,0BAGHyF,EAAUC,GACXxB,GAAawB,EAAGpE,OAAS4C,EAAU5C,MACnCgE,QAIFF,EAAU,WACZlB,EAAUvK,eAAe,OAAQoL,GACjCb,EAAUvK,eAAe,QAASqG,GAClCkE,EAAUvK,eAAe,QAAS6L,GAClCP,EAAKzL,IAAI,QAASmG,GAClBsF,EAAKzL,IAAI,YAAaiM,IAE1BvB,EAAU3K,KAAK,OAAQwL,GACvBb,EAAU3K,KAAK,QAASyG,GACxBkE,EAAU3K,KAAK,QAASiM,QACnBjM,KAAK,QAASoG,QACdpG,KAAK,YAAakM,GACvBvB,EAAUE,gDAQLtI,WAAa,OAClB+G,EAAO4B,sBAAwB,cAAgBpL,KAAK6K,UAAU5C,UACzDjH,aAAa,aACbgL,QAGD,SAAWhM,KAAKyC,YAChBzC,KAAK2B,KAAKsI,SACVjK,KAAK6K,UAAUiB,cACXvN,EAAI,EACFmF,EAAI1D,KAAKyK,SAASjM,OACjBD,EAAImF,EAAGnF,SACL+N,MAAMtM,KAAKyK,SAASlM,qCAS5ByE,MACD,YAAchD,KAAKyC,YACnB,SAAWzC,KAAKyC,YAChB,YAAczC,KAAKyC,uBACdzB,aAAa,SAAUgC,QAEvBhC,aAAa,aACVgC,EAAOnG,UACN,YACI0P,YAAYC,KAAKlE,MAAMtF,EAAOlG,iBAElC,YACI2P,wBACAC,WAAW,aACX1L,aAAa,aACbA,aAAa,kBAEjB,YACK8E,EAAM,IAAIzD,MAAM,gBAEtByD,EAAI6G,KAAO3J,EAAOlG,UACb+J,QAAQf,aAEZ,eACI9E,aAAa,OAAQgC,EAAOlG,WAC5BkE,aAAa,UAAWgC,EAAOlG,2CAaxCA,QACHkE,aAAa,YAAalE,QAC1B0N,GAAK1N,EAAKqO,SACVN,UAAUrI,MAAM2I,IAAMrO,EAAKqO,SAC3BV,SAAWzK,KAAK4M,eAAe9P,EAAK2N,eACpCC,aAAe5N,EAAK4N,kBACpBC,YAAc7N,EAAK6N,iBACnBkC,WAAa/P,EAAK+P,gBAClBxG,SAED,WAAarG,KAAKyC,iBAEjBgK,8EAQAzK,eAAehC,KAAK4K,uBACpBA,iBAAmB5K,KAAK6B,cAAa,WACtCiL,EAAKjK,QAAQ,kBACd7C,KAAK0K,aAAe1K,KAAK2K,aACxB3K,KAAK2B,KAAKuE,gBACL0E,iBAAiBxE,+CASrBwD,YAAYjJ,OAAO,EAAGX,KAAK6J,oBAI3BA,cAAgB,EACjB,IAAM7J,KAAK4J,YAAYpL,YAClBwC,aAAa,cAGbgL,2CASL,WAAahM,KAAKyC,YAClBzC,KAAK6K,UAAUtI,WACdvC,KAAK6L,WACN7L,KAAK4J,YAAYpL,OAAQ,KACnBsE,EAAU9C,KAAK+M,0BAChBlC,UAAU7D,KAAKlE,QAGf+G,cAAgB/G,EAAQtE,YACxBwC,aAAa,4DAUShB,KAAK6M,YACR,YAAxB7M,KAAK6K,UAAU5C,MACfjI,KAAK4J,YAAYpL,OAAS,UAEnBwB,KAAK4J,oBRlYGnM,EQoYfuP,EAAc,EACTzO,EAAI,EAAGA,EAAIyB,KAAK4J,YAAYpL,OAAQD,IAAK,KACxCzB,EAAOkD,KAAK4J,YAAYrL,GAAGzB,QAC7BA,IACAkQ,GRvYO,iBADIvP,EQwYeX,GRjY1C,SAAoB8K,WACZqF,EAAI,EAAGzO,EAAS,EACXD,EAAI,EAAGmF,EAAIkE,EAAIpJ,OAAQD,EAAImF,EAAGnF,KACnC0O,EAAIrF,EAAInJ,WAAWF,IACX,IACJC,GAAU,EAELyO,EAAI,KACTzO,GAAU,EAELyO,EAAI,OAAUA,GAAK,MACxBzO,GAAU,GAGVD,IACAC,GAAU,UAGXA,EAvBI0O,CAAWzP,GAGf2G,KAAK+I,KAPQ,MAOF1P,EAAI2P,YAAc3P,EAAI4P,QQqY5B9O,EAAI,GAAKyO,EAAchN,KAAK6M,kBACrB7M,KAAK4J,YAAY7I,MAAM,EAAGxC,GAErCyO,GAAe,SAEZhN,KAAK4J,0CAWV+B,EAAK2B,EAASxN,eACX4M,WAAW,UAAWf,EAAK2B,EAASxN,GAClCE,kCAEN2L,EAAK2B,EAASxN,eACV4M,WAAW,UAAWf,EAAK2B,EAASxN,GAClCE,wCAWAnD,EAAMC,EAAMwQ,EAASxN,MACxB,mBAAsBhD,IACtBgD,EAAKhD,EACLA,OAAOyQ,GAEP,mBAAsBD,IACtBxN,EAAKwN,EACLA,EAAU,MAEV,YAActN,KAAKyC,YAAc,WAAazC,KAAKyC,aAGvD6K,EAAUA,GAAW,IACbE,UAAW,IAAUF,EAAQE,aAC/BxK,EAAS,CACXnG,KAAMA,EACNC,KAAMA,EACNwQ,QAASA,QAERtM,aAAa,eAAgBgC,QAC7B4G,YAAY3J,KAAK+C,GAClBlD,GACAE,KAAKE,KAAK,QAASJ,QAClBkM,oDAQC/E,EAAQ,WACVwG,EAAK5K,QAAQ,gBACb4K,EAAK5C,UAAU5D,SAEbyG,EAAkB,SAAlBA,IACFD,EAAKtN,IAAI,UAAWuN,GACpBD,EAAKtN,IAAI,eAAgBuN,GACzBzG,KAEE0G,EAAiB,WAEnBF,EAAKvN,KAAK,UAAWwN,GACrBD,EAAKvN,KAAK,eAAgBwN,UAE1B,YAAc1N,KAAKyC,YAAc,SAAWzC,KAAKyC,kBAC5CA,WAAa,UACdzC,KAAK4J,YAAYpL,YACZ0B,KAAK,SAAS,WACXuN,EAAK5B,UACL8B,IAGA1G,OAIHjH,KAAK6L,UACV8B,IAGA1G,KAGDjH,qCAOH8F,GACJ0D,EAAO4B,uBAAwB,OAC1BpK,aAAa,QAAS8E,QACtBjD,QAAQ,kBAAmBiD,mCAO5B5D,EAAQC,GACR,YAAcnC,KAAKyC,YACnB,SAAWzC,KAAKyC,YAChB,YAAczC,KAAKyC,kBAEdT,eAAehC,KAAK4K,uBAEpBC,UAAUtK,mBAAmB,cAE7BsK,UAAU5D,aAEV4D,UAAUtK,qBACoB,mBAAxBC,qBACPA,oBAAoB,UAAWR,KAAK8K,sBAAsB,QAGzDrI,WAAa,cAEb+H,GAAK,UAELxJ,aAAa,QAASkB,EAAQC,QAG9ByH,YAAc,QACdC,cAAgB,0CAUdY,WACLmD,EAAmB,GACrBrP,EAAI,EACFsP,EAAIpD,EAASjM,OACZD,EAAIsP,EAAGtP,KACLyB,KAAKkI,WAAWH,QAAQ0C,EAASlM,KAClCqP,EAAiB3N,KAAKwK,EAASlM,WAEhCqP,SAzjBanO,GA4jB5B+J,EAAOC,SCpiBiB,kBC7BRtE,EAAKxD,UAAS,IAAI6H,EAAOrE,EAAKxD"}