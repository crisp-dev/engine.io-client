{"version":3,"file":"engine.io.esm.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/@socket.io/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.js","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/transport.js","../build/esm/contrib/yeast.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/contrib/parseqs.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../node_modules/engine.io-parser/build/esm/index.js","../build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"@socket.io/base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri\";\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","obj","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","length","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","self","window","Function","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","encodedPacket","charAt","substring","decodePacket","onPacket","details","alphabet","map","prev","seed","encode","num","encoded","Math","floor","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","name","check","uri","protocols","attr","reduce","acc","k","hasOwnProperty","pick","extraHeaders","headers","ws","err","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","e","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","now","Date","yeast","b64","encodedQuery","str","encodeURIComponent","hostname","indexOf","path","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","protocol","location","writeBuffer","prevBufferLen","assign","agent","withCredentials","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","o","clone","EIO","sid","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","pause","cleanup","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","undefined","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j"],"mappings":"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"}