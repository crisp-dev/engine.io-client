{"version":3,"file":"engine.io.esm.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.js","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/transport.js","../build/esm/contrib/yeast.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/contrib/parseqs.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../node_modules/engine.io-parser/build/esm/index.js","../build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export default (() => {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri\";\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","obj","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","i","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","length","len","p","arraybuffer","bytes","decode","mapBinary","Emitter_1","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThis","window","Function","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","byteLength","str","c","l","utf8Length","Math","ceil","size","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","encodedPacket","charAt","substring","decodePacket","onPacket","details","alphabet","map","prev","seed","encode","num","encoded","floor","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","name","check","uri","protocols","attr","reduce","acc","k","hasOwnProperty","pick","extraHeaders","headers","ws","err","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","e","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","now","Date","yeast","b64","encodedQuery","encodeURIComponent","hostname","indexOf","path","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","protocol","location","writeBuffer","prevBufferLen","assign","agent","withCredentials","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","o","clone","EIO","sid","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","pause","cleanup","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","options","undefined","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j"],"mappings":"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"}